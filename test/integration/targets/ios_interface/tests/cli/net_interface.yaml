---
- debug: msg="START ios cli/net_interface.yaml on connection={{ ansible_connection }}"

# Add minimal testcase to check args are passed correctly to
# implementation module and module run is successful.

- name: Run show version
  ios_command:
    commands: show version
    authorize: yes
  register: show_version_result

- block:
    - name: Set test interface to GigabitEthernet0/1 as we are on Cisco IOS
      set_fact: test_interface=GigabitEthernet0/1
    - name: Set test interface 2 to GigabitEthernet0/2 as we are on Cisco IOS
      set_fact: test_interface2=GigabitEthernet0/2
  when: "'Cisco IOS' in show_version_result.stdout[0]"

- block:
    - name: Set test interface to GigabitEthernet2 as we are on Cisco IOS-XE
      set_fact: test_interface=GigabitEthernet2
    - name: Disable autonegotiation on GigabitEthernet2
      ios_config:
        lines:
          - no negotiation auto
        parents: int GigabitEthernet2
        authorize: yes

    - name: Set test interface 2 to GigabitEthernet3 as we are on Cisco IOS-XE
      set_fact: test_interface2=GigabitEthernet3
    - name: Disable autonegotiation on GigabitEthernet3
      ios_config:
        lines:
          - no negotiation auto
        parents: int GigabitEthernet3
        authorize: yes
  when: "'Cisco IOS-XE' in show_version_result.stdout[0]"

- name: Configure interface (setup)
  net_interface:
    name: "{{ test_interface }}"
    description: test-interface-1
    speed: 1000
    mtu: 1800
    state: present
    authorize: yes
  register: result

- name: Configure interface using platform agnostic module
  net_interface:
    name: "{{ test_interface }}"
    description: test-interface-initial
    state: present
    authorize: yes
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface {{ test_interface }}" in result.commands'
      - '"description test-interface-initial" in result.commands'

- name: Confgure interface parameters using platform agnostic module
  net_interface:
    name: "{{ test_interface }}"
    description: test-interface
    mtu: 2000
    state: present
    authorize: yes
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface {{ test_interface }}" in result.commands'
      - '"description test-interface" in result.commands'
      - '"mtu 2000" in result.commands'

- debug: msg="START ios cli/net_interface.yaml on connection={{ ansible_connection }}"
